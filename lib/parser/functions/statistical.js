'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.STATISTICAL_FUNCTIONS = undefined;

var _formulajs = require('formulajs');

var formula = _interopRequireWildcard(_formulajs);

var _utils = require('formulajs/lib/utils');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var STATISTICAL_FUNCTIONS = {
    AVERAGE: formula.AVERAGE,
    AVERAGEA: formula.AVERAGEA,
    // AVERAGEIF: formula.AVERAGEIF, // Not secure, can pass any JS code as criteria
    // AVERAGEIFS: formula.AVERAGEIFS,
    // COLUMN: formula.COLUMN,
    // COLUMNS: formula.COLUMNS,
    // CORREL: formula.CORREL,
    COUNT: formula.COUNT,
    COUNTA: formula.COUNTA,
    COUNTBLANK: formula.COUNTBLANK,
    COUNTIN: function COUNTIN(range, value) {
        return formula.COUNTIN((0, _utils.flatten)(range), value);
    },
    // COUNTIF: formula.COUNTIF,
    // COUNTIFS: formula.COUNTIFS,
    COUNTUNIQUE: formula.COUNTUNIQUE,
    // DEVSQ: formula.DEVSQ,
    // FISHER: formula.FISHER,
    // FISHERINV: formula.FISHERINV,
    // FORECAST: formula.FORECAST,
    // FREQUENCY: formula.FREQUENCY,
    // GAMMA: formula.GAMMA,
    // GAMMALN: formula.GAMMALN,
    // GAUSS: formula.GAUSS,
    // GEOMEAN: formula.GEOMEAN,
    // GROWTH: formula.GROWTH,
    // HARMEAN: formula.HARMEAN,
    // INTERCEPT: formula.INTERCEPT,
    // KURT: formula.KURT,
    // LARGE: formula.LARGE,
    // LINEST: formula.LINEST,
    // LOGEST: formula.LOGEST,
    MAX: formula.MAX,
    // MAXA: formula.MAXA,
    // MEDIAN: formula.MEDIAN,
    MIN: formula.MIN
    // MINA: formula.MINA,
    // PEARSON: formula.PEARSON,
    // PERMUT: formula.PERMUT,
    // PERMUTATIONA: formula.PERMUTATIONA,
    // PHI: formula.PHI,
    // PROB: formula.PROB,
    // ROW: formula.ROW,
    // ROWS: formula.ROWS,
    // RSQ: formula.RSQ,
    // SKEW: formula.SKEW,
    // SLOPE: formula.SLOPE,
    // SMALL: formula.SMALL,
    // STANDARDIZE: formula.STANDARDIZE,
    // STDEV: formula.STDEV,
    // STDEVA: formula.STDEVA,
    // VARA: formula.VARA,
    // STDEVPA: formula.STDEVPA,
    // VARPA: formula.VARPA,
    // STEYX: formula.STEYX,
    // TRANSPOSE: formula.TRANSPOSE,
    // TREND: formula.TREND,
    // TRIMMEAN: formula.TRIMMEAN,
    // BETADIST: formula.BETADIST,
    // BETAINV: formula.BETAINV,
    // BINOMDIST: formula.BINOMDIST,
    // CEILING: formula.CEILING,
    // ISOCEILING: formula.ISOCEILING,
    // CEILINGMATH: formula.CEILINGMATH,
    // CEILINGPRECISE: formula.CEILINGPRECISE,
    // CHIDIST: formula.CHIDIST,
    // CHIDISTRT: formula.CHIDISTRT,
    // CHIINV: formula.CHIINV,
    // CHIINVRT: formula.CHIINVRT,
    // CHITEST: formula.CHITEST,
    // COVAR: formula.COVAR,
    // COVARIANCEP: formula.COVARIANCEP,
    // COVARIANCES: formula.COVARIANCES,
    // CRITBINOM: formula.CRITBINOM,
    // EXPONDIST: formula.EXPONDIST,
    // ERFCPRECISE: formula.ERFCPRECISE,
    // ERFPRECISE: formula.ERFPRECISE,
    // FDIST: formula.FDIST,
    // FDISTRT: formula.FDISTRT,
    // FINVRT: formula.FINVRT,
    // FINV: formula.FINV,
    // FLOOR: formula.FLOOR,
    // FLOORMATH: formula.FLOORMATH,
    // FLOORPRECISE: formula.FLOORPRECISE,
    // FTEST: formula.FTEST,
    // GAMMADIST: formula.GAMMADIST,
    // GAMMAINV: formula.GAMMAINV,
    // GAMMALNPRECISE: formula.GAMMALNPRECISE,
    // HYPGEOMDIST: formula.HYPGEOMDIST,
    // LOGINV: formula.LOGINV,
    // LOGNORMINV: formula.LOGNORMINV,
    // LOGNORMDIST: formula.LOGNORMDIST,
    // MODEMULT: formula.MODEMULT,
    // MODESNGL: formula.MODESNGL,
    // NEGBINOMDIST: formula.NEGBINOMDIST,
    // NETWORKDAYSINTL: formula.NETWORKDAYSINTL,
    // NORMDIST: formula.NORMDIST,
    // NORMINV: formula.NORMINV,
    // NORMSDIST: formula.NORMSDIST,
    // NORMSINV: formula.NORMSINV,
    // PERCENTILEEXC: formula.PERCENTILEEXC,
    // PERCENTILEINC: formula.PERCENTILEINC,
    // PERCENTRANKEXC: formula.PERCENTRANKEXC,
    // PERCENTRANKINC: formula.PERCENTRANKINC,
    // POISSONDIST: formula.POISSONDIST,
    // QUARTILEEXC: formula.QUARTILEEXC,
    // QUARTILEINC: formula.QUARTILEINC,
    // RANKAVG: formula.RANKAVG,
    // RANKEQ: formula.RANKEQ,
    // SKEWP: formula.SKEWP,
    // STDEVP: formula.STDEVP,
    // STDEVS: formula.STDEVS,
    // TDIST: formula.TDIST,
    // TDISTRT: formula.TDISTRT,
    // TINV: formula.TINV,
    // TTEST: formula.TTEST,
    // VARP: formula.VARP,
    // VARS: formula.VARS,
    // WEIBULLDIST: formula.WEIBULLDIST,
    // WORKDAYINTL: formula.WORKDAYINTL,
    // ZTEST: formula.ZTEST,
};

exports.STATISTICAL_FUNCTIONS = STATISTICAL_FUNCTIONS;